name: Unit Tests

on:
  push:
    branches:
      - main # Or your primary branch name
  pull_request:
    types: [synchronize]
    branches:
      - main # Or your primary branch name

concurrency:
  group: |
    ${{ github.workflow }}-${{ github.workflow_ref }}-${{
      github.event_name == 'pull_request' 
      && github.event.pull_request.number 
      || github.ref_name }}
  cancel-in-progress: true

jobs:
  run-unit-tests:
    name: Run .NET Unit Tests
    runs-on: windows-latest # Consistent with other workflows

    defaults:
      run:
        shell: pwsh # Using PowerShell for consistency

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for accurate test coverage, if applicable

      - name: Set up .NET 8.0
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'zulu'

      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: ./.sonar/scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        run: |
          New-Item -Path ./.sonar/scanner -ItemType Directory -Force
          dotnet tool update dotnet-sonarscanner --tool-path ./.sonar/scanner



      - name: Install .NET Aspire Workload
        run: dotnet workload install aspire

      - name: Restore .NET Workloads for Solutions
        run: |
          echo "Restoring workloads for FlinkDotNet.sln..."
          dotnet workload restore FlinkDotNet/FlinkDotNet.sln
          echo "Restoring workloads for FlinkDotNetAspire.sln..."
          dotnet workload restore FlinkDotNetAspire/FlinkDotNetAspire.sln
          echo "Restoring workloads for FlinkDotNet.WebUI.sln..."
          dotnet workload restore FlinkDotNet.WebUI/FlinkDotNet.WebUI.sln
          echo "Workload restoration complete."

      - name: Run tests for FlinkDotNet solution
        run: |
          echo "Running tests for FlinkDotNet/FlinkDotNet.sln with coverage collection..."
          Push-Location FlinkDotNet
          dotnet test FlinkDotNet.sln --configuration Release --logger "trx" --results-directory "TestResults" --collect:"XPlat Code Coverage" --settings ../coverlet.runsettings
          Pop-Location

      - name: Convert coverage to multiple formats
        run: |
          # Install ReportGenerator if not already installed
          dotnet tool install --global dotnet-reportgenerator-globaltool --version 5.2.0 2>$null
          
          Write-Host "Converting coverage files to multiple formats for SonarCloud..."
          Get-ChildItem -Path "./FlinkDotNet/TestResults" -Recurse -Filter "coverage.cobertura.xml" | ForEach-Object {
            $coberturaFile = $_.FullName
            $targetDir = $_.DirectoryName
            Write-Host "Processing coverage file: $coberturaFile"
            
            # Convert to OpenCover format for SonarCloud
            $openCoverFile = Join-Path $targetDir "coverage.opencover.xml"
            Write-Host "Converting to OpenCover format: $openCoverFile"
            reportgenerator -reports:"$coberturaFile" -targetdir:"$targetDir" -reporttypes:"OpenCover" -verbosity:Info
            
            # Also generate an HTML report for debugging
            $htmlReportDir = Join-Path $targetDir "coverage-html"
            Write-Host "Generating HTML coverage report: $htmlReportDir"
            reportgenerator -reports:"$coberturaFile" -targetdir:"$htmlReportDir" -reporttypes:"Html" -verbosity:Info
          }
          
          # List all coverage files for debugging
          Write-Host "Coverage files generated:"
          Get-ChildItem -Path "./FlinkDotNet/TestResults" -Recurse -Filter "*.xml" | ForEach-Object {
            Write-Host "  $($_.FullName) (Size: $($_.Length) bytes)"
          }

      - name: Build FlinkDotNetAspire solution (no tests)
        run: |
          echo "Building FlinkDotNetAspire/FlinkDotNetAspire.sln (contains no test projects)..."
          Push-Location FlinkDotNetAspire
          dotnet build FlinkDotNetAspire.sln --configuration Release
          Pop-Location

      - name: Build FlinkDotNet.WebUI solution (no tests)
        run: |
          echo "Building FlinkDotNet.WebUI/FlinkDotNet.WebUI.sln (contains no test projects)..."
          Push-Location FlinkDotNet.WebUI
          dotnet build FlinkDotNet.WebUI.sln --configuration Release
          Pop-Location

      - name: Submit Coverage to SonarCloud
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          $ErrorActionPreference = 'Stop'

          if (-Not (Test-Path '.sonar/scanner')) {
            New-Item -Path '.sonar/scanner' -ItemType Directory | Out-Null
            dotnet tool update dotnet-sonarscanner --tool-path ./.sonar/scanner
          }

          ./.sonar/scanner/dotnet-sonarscanner begin /k:"devstress_FLINK.NET" /o:"devstress" /d:sonar.token="$env:SONAR_TOKEN" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.scanner.skipJreProvisioning=true /d:sonar.scanner.scanAll=false /d:sonar.cs.opencover.reportsPaths="FlinkDotNet/TestResults/**/*.opencover.xml" /d:sonar.coverage.exclusions="**/Program.cs,**/Migrations/**"

          dotnet build FlinkDotNet/FlinkDotNet.sln
          dotnet build FlinkDotNetAspire/FlinkDotNetAspire.sln
          dotnet build FlinkDotNet.WebUI/FlinkDotNet.WebUI.sln

          ./.sonar/scanner/dotnet-sonarscanner end /d:sonar.token="$env:SONAR_TOKEN"

      - name: Upload Test Results
        if: always() # Run this step even if tests fail, to upload partial results
        uses: actions/upload-artifact@v4
        with:
          name: dotnet-test-results
          path: |
            FlinkDotNet/TestResults/**/*.trx
            FlinkDotNet/TestResults/**/*.xml
            FlinkDotNet/TestResults/**/coverage-html/**
          retention-days: 7

