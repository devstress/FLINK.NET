name: Reliability Tests

on:
  push:
    branches:
      - main # Or your primary branch name
  pull_request:
    types: [opened, synchronize]
    branches:
      - main # Or your primary branch name
  workflow_dispatch: # Retain manual triggering

concurrency:
  group: |
    ${{ github.workflow }}-${{ github.workflow_ref }}-${{
      github.event_name == 'pull_request' 
      && github.event.pull_request.number 
      || github.ref_name }}
  cancel-in-progress: true

env:
  FLINKDOTNET_STANDARD_TEST_MESSAGES: "10000" # Fast reliability test message count for CI (reduced from 10M default)

jobs:
  run-reliability-tests:
    name: Run Flink.Net Reliability Tests with Kafka Best Practices
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Ensure Docker is running
        run: docker info

      - name: Set up .NET 8.0
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Install .NET Aspire Workload
        run: dotnet workload install aspire

      - name: Restore .NET Workloads for Solutions
        run: |
          dotnet workload restore FlinkDotNet/FlinkDotNet.sln
          dotnet workload restore FlinkDotNetAspire/FlinkDotNetAspire.sln

      - name: Build Solutions
        run: |
          echo "Building FlinkDotNet solution (dependency)..."
          cd FlinkDotNet
          dotnet build FlinkDotNet.sln --configuration Release
          cd ..
          
          echo "Building FlinkDotNetAspire solution..."
          cd FlinkDotNetAspire
          dotnet build FlinkDotNetAspire.sln --configuration Release
          cd ..

      - name: Start Kafka Best Practices Environment
        run: |
          echo "üöÄ Starting Kafka development environment with best practices setup..."
          chmod +x ./scripts/kafka-dev.sh
          ./scripts/kafka-dev.sh start
          
          echo "‚è≥ Waiting for Kafka environment to be fully ready..."
          sleep 15
          
          echo "üìä Checking Kafka environment status..."
          ./scripts/kafka-dev.sh status

      - name: Verify Kafka Environment Health
        run: |
          echo "üß™ Testing Kafka environment connectivity..."
          ./scripts/kafka-dev.sh test
          
          echo "üìù Listing configured topics..."
          ./scripts/kafka-dev.sh topics

      - name: Run Flink.Net Standard Reliability Test with External Kafka
        env:
          FLINKDOTNET_STANDARD_TEST_MESSAGES: ${{ env.FLINKDOTNET_STANDARD_TEST_MESSAGES }}
          DOTNET_ENVIRONMENT: "Development"
        run: |
          echo "üß™ Running Flink.Net Standard Reliability Test with ${{ env.FLINKDOTNET_STANDARD_TEST_MESSAGES }} messages..."
          echo "üìä Using external Kafka environment (localhost:9092) and Redis (localhost:6379)"
          
          cd FlinkDotNetAspire/FlinkDotnetStandardReliabilityTest
          dotnet test --configuration Release --logger "console;verbosity=detailed" --no-build
          
          if [ $? -ne 0 ]; then
            echo "‚ùå Flink.Net Standard Reliability Test FAILED."
            exit 1
          fi
          
          echo "‚úÖ Flink.Net Standard Reliability Test PASSED with external Kafka setup."

      - name: Stop Kafka Environment
        if: always()
        run: |
          echo "üõë Stopping Kafka environment..."
          ./scripts/kafka-dev.sh stop
          echo "‚úÖ Kafka environment cleanup complete."
